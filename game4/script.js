

const grid = document.querySelector('.grid');
const spinButton = document.getElementById('spin-button');
const buyBonusButton = document.getElementById('buy-bonus');
const balanceDisplay = document.getElementById('balance');
const betSelector = document.getElementById('bet');
const bonusCostDisplay = document.getElementById('bonus-cost');
const totalBonusWinsDisplay = document.getElementById('total-bonus-wins');
const lastSpinWinDisplay = document.getElementById('last-spin-win');
const spinsLeftDisplay = document.getElementById('spins-left');
const modal = document.getElementById('custom-modal');
const modalText = document.getElementById('modal-text');
const modalOk = document.getElementById('modal-ok');
const modalCancel = document.getElementById('modal-cancel');
const gameTitle = document.querySelector('h1');

// –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –∏–∑ LocalStorage
let balance = localStorage.getItem('balance') ? parseFloat(localStorage.getItem('balance')) : 1000.00;
let currentBet = 10;
let bonusCost = currentBet * 100;
let isSpinning = false;
let isBonusRound = false;
let bonusSpins = 0;
let totalBonusWins = 0.00;
let lastSpinWin = 0.00;

// –°–∏–º–≤–æ–ª—ã –¥–ª—è –∏–≥—Ä—ã –∏ –∏—Ö —à–∞–Ω—Å—ã
const symbols = [
  { symbol: 'üçí', chance: 9.5 },
  { symbol: 'üçã', chance: 8.5 },
  { symbol: 'üçä', chance: 8 },
  { symbol: 'üçé', chance: 7 },
  { symbol: 'üçá', chance: 6 },
  { symbol: 'üçâ', chance: 5 },
  { symbol: '‚≠ê', chance: 4 },
];

// –ë–æ–º–±—ã –∏ –∏—Ö —à–∞–Ω—Å—ã
const bombs = [
  { symbol: '2X', chance: 5 },
  { symbol: '3X', chance: 3 },
  { symbol: '5X', chance: 2 },
  { symbol: '10X', chance: 1 },
  { symbol: '15X', chance: 0.5 },
  { symbol: '20X', chance: 0.3 },
  { symbol: '50X', chance: 0.2 },
  { symbol: '100X', chance: 100 },
];

const lollipopChance = 3; // –®–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è üç≠ (3%)
const bombChance = 50; // –®–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –±–æ–º–±—ã –≤ –±–æ–Ω—É—Å–∫–µ (5%)

// –¶–µ–Ω–Ω–æ—Å—Ç—å —Å–∏–º–≤–æ–ª–æ–≤
const symbolValues = {
  'üçí': 1 / 15,
  'üçã': 1 / 12,
  'üçä': 1 / 8,
  'üçé': 1 / 5,
  'üçá': 1 / 3,
  'üçâ': 1 / 2,
  '‚≠ê': 1,
};


// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –±–æ–Ω—É—Å–∞
function updateUI() {
  localStorage.setItem('balance', balance.toFixed(2));
  bonusCostDisplay.textContent = bonusCost.toFixed(2);
  balanceDisplay.textContent = balance.toFixed(2);
  totalBonusWinsDisplay.textContent = totalBonusWins.toFixed(2);
  lastSpinWinDisplay.textContent = lastSpinWin.toFixed(2);
  spinsLeftDisplay.textContent = bonusSpins;

  // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–Ω–æ–ø–æ–∫ —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è –±–æ–Ω—É—Å–Ω–æ–≥–æ —Ä–∞—É–Ω–¥–∞
  spinButton.disabled = isBonusRound;
  buyBonusButton.disabled = isBonusRound;
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∫–∏ 6x5
function createGrid() {
  for (let i = 0; i < 30; i++) {
    const cell = document.createElement('div');
    grid.appendChild(cell);
  }
}

// –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ —Å —É—á–µ—Ç–æ–º —à–∞–Ω—Å–æ–≤
function getRandomSymbol() {
  const totalChance = symbols.reduce((sum, sym) => sum + sym.chance, 0);
  let random = Math.random() * totalChance;
  for (const sym of symbols) {
    if (random < sym.chance) return sym.symbol;
    random -= sym.chance;
  }
  return symbols[0].symbol;
}

// –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–π –±–æ–º–±—ã —Å —É—á–µ—Ç–æ–º —à–∞–Ω—Å–æ–≤
function getRandomBomb() {
  const totalChance = bombs.reduce((sum, bomb) => sum + bomb.chance, 0);
  let random = Math.random() * totalChance;
  for (const bomb of bombs) {
    if (random < bomb.chance) return bomb.symbol;
    random -= bomb.chance;
  }
  return bombs[0].symbol;
}

// –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–µ—Ç–∫–∏ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
function spinGrid() {
  if (isSpinning) return;
  if (balance < currentBet && !isBonusRound) {
    showModal('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!');
    return;
  }

  isSpinning = true;
  if (!isBonusRound) {
    balance -= currentBet; // –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–∞–≤–∫—É —Ç–æ–ª—å–∫–æ –≤ –æ–±—ã—á–Ω–æ–º —Ä–∞—É–Ω–¥–µ
  }
  updateUI();

  const cells = document.querySelectorAll('.grid div');
  cells.forEach(cell => {
    let randomSymbol;
    if (isBonusRound) {
      // –í –±–æ–Ω—É—Å–Ω–æ–º —Ä–∞—É–Ω–¥–µ –¥–æ–±–∞–≤–ª—è–µ–º –±–æ–º–±—ã –∏ üç≠
      const random = Math.random() * 100;
      if (random < lollipopChance) {
        randomSymbol = 'üç≠'; // –®–∞–Ω—Å 1% –Ω–∞ üç≠
      } else if (random < bombChance) {
        randomSymbol = getRandomBomb();
      } else {
        randomSymbol = getRandomSymbol();
      }
    } else {
      // –í –æ–±—ã—á–Ω–æ–º —Ä–∞—É–Ω–¥–µ –±–æ–º–± –∏ üç≠ –Ω–µ—Ç
      randomSymbol = getRandomSymbol();
    }
    cell.textContent = randomSymbol;
    cell.classList.add('falling');
    setTimeout(() => cell.classList.remove('falling'), 500);
  });

  setTimeout(() => {
    checkForWins();
    isSpinning = false;
  }, 500);
}

// –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
function highlightWinningSymbols(winningCells) {
  winningCells.forEach(cell => cell.classList.add('highlight'));
  setTimeout(() => {
    winningCells.forEach(cell => cell.classList.remove('highlight'));
  }, 500);
}

// –ê–Ω–∏–º–∞—Ü–∏—è —Ç—Ä—è—Å–∫–∏ –±–æ–º–±—ã (—Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö)
function shakeBomb(cell) {
  cell.classList.add('shake');
  setTimeout(() => cell.classList.remove('shake'), 500);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—ã–∏–≥—Ä—ã—à–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
function checkForWins() {
  const cells = document.querySelectorAll('.grid div');
  const symbolCounts = {};
  let totalMultiplier = 0;
  let lollipopCount = 0;
  const winningCells = [];

  cells.forEach(cell => {
    const symbol = cell.textContent;
    if (bombs.map(b => b.symbol).includes(symbol)) {
      const multiplier = parseInt(symbol);
      totalMultiplier += multiplier;
      shakeBomb(cell); // –ê–Ω–∏–º–∞—Ü–∏—è —Ç—Ä—è—Å–∫–∏ –±–æ–º–±—ã
    } else if (symbol === 'üç≠') {
      lollipopCount++;
    } else {
      symbolCounts[symbol] = (symbolCounts[symbol] || 0) + 1;
      if (symbolCounts[symbol] >= 8) {
        winningCells.push(cell);
      }
    }
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ üç≠
  if (lollipopCount >= 3) {
    bonusSpins += 5;
    showModal(`+5 –±–æ–Ω—É—Å–Ω—ã—Ö —Å–ø–∏–Ω–æ–≤! –û—Å—Ç–∞–ª–æ—Å—å —Å–ø–∏–Ω–æ–≤: ${bonusSpins}`);
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–∏–≥—Ä—ã—à–µ–π
  let winAmount = 0;
  Object.keys(symbolCounts).forEach(symbol => {
    const count = symbolCounts[symbol];
    if (count >= 8) {
      winAmount += currentBet * symbolValues[symbol] * count;
      // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≤—Å–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å—ã–≥—Ä–∞–ª–∏
      cells.forEach(cell => {
        if (cell.textContent === symbol) {
          winningCells.push(cell);
        }
      });
    }
  });

  if (totalMultiplier > 0) {
    winAmount *= totalMultiplier;
  }

  if (winAmount > 0) {
    if (isBonusRound) {
      totalBonusWins += winAmount; // –ù–∞–∫–∞–ø–ª–∏–≤–∞–µ–º –≤—ã–∏–≥—Ä—ã—à –≤ –±–æ–Ω—É—Å–∫–µ
    } else {
      balance += winAmount; // –ù–∞—á–∏—Å–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à —Å—Ä–∞–∑—É –≤ –æ–±—ã—á–Ω–æ–º —Ä–∞—É–Ω–¥–µ
    }
    lastSpinWin = winAmount;
    highlightWinningSymbols(winningCells);
  }

  // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  updateUI();

  // –ï—Å–ª–∏ —ç—Ç–æ –±–æ–Ω—É—Å–Ω—ã–π —Ä–∞—É–Ω–¥, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
  if (isBonusRound) {
    bonusSpins--; // –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å–ø–∏–Ω–æ–≤
    if (bonusSpins > 0) {
      setTimeout(spinGrid, 1400); // –ó–∞–¥–µ—Ä–∂–∫–∞ 1.4 —Å–µ–∫—É–Ω–¥—ã
    } else {
      setTimeout(() => {
        isBonusRound = false;
        balance += totalBonusWins; // –ù–∞—á–∏—Å–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –±–æ–Ω—É—Å–Ω–æ–≥–æ —Ä–∞—É–Ω–¥–∞
        showModal(`–ë–æ–Ω—É—Å–Ω—ã–π —Ä–∞—É–Ω–¥ –∑–∞–≤–µ—Ä—à–µ–Ω! –í—ã–∏–≥—Ä—ã—à: ${totalBonusWins.toFixed(2)} ‚ÇΩ`, false, true); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞–¥–ø–∏—Å—å "–°–ª–æ—Ç—ã"
        gameTitle.textContent = '–°–ª–æ—Ç—ã';

        // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û–ö" –Ω–∞ 1 —Å–µ–∫—É–Ω–¥—É
        modalOk.disabled = true;
        setTimeout(() => {
          modalOk.disabled = false;
        }, 1000);

        totalBonusWins = 0.00;
        lastSpinWin = 0.00;
        updateUI();
      }, 1400); // –ó–∞–¥–µ—Ä–∂–∫–∞ 1.4 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º –±–æ–Ω—É—Å–Ω–æ–≥–æ —Ä–∞—É–Ω–¥–∞
    }
  }
}

// –ü–æ–∫—É–ø–∫–∞ –±–æ–Ω—É—Å–∞
function buyBonus() {
  if (balance >= bonusCost) {
    showModal(`–ö—É–ø–∏—Ç—å –±–æ–Ω—É—Å–Ω—ã–π —Ä–∞—É–Ω–¥ –∑–∞ ${bonusCost.toFixed(2)} ‚ÇΩ?`, true);
  } else {
    showModal('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –±–æ–Ω—É—Å–∞!');
  }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function showModal(text, isConfirm = false, isCompletion = false) {
  modalText.textContent = text;
  modal.style.display = 'flex';

  if (isConfirm) {
    modalOk.style.display = 'inline-block';
    modalCancel.style.display = 'inline-block';
  } else if (isCompletion) {
    modalOk.style.display = 'inline-block';
    modalCancel.style.display = 'none';
  } else {
    modalOk.style.display = 'inline-block';
    modalCancel.style.display = 'none';
  }
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function closeModal() {
  modal.style.display = 'none';
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏ –±–æ–Ω—É—Å–∞
modalOk.addEventListener('click', () => {
  if (modalText.textContent.includes('–ë–æ–Ω—É—Å–Ω—ã–π —Ä–∞—É–Ω–¥ –Ω–∞—á–∞–ª—Å—è')) {
    // –ï—Å–ª–∏ —ç—Ç–æ –æ–∫–Ω–æ "–ë–æ–Ω—É—Å–Ω—ã–π —Ä–∞—É–Ω–¥ –Ω–∞—á–∞–ª—Å—è", –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ–Ω—É—Å–Ω—ã–π —Ä–∞—É–Ω–¥
    closeModal();
    gameTitle.textContent = '–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å'; // –ú–µ–Ω—è–µ–º –Ω–∞–¥–ø–∏—Å—å
    setTimeout(spinGrid, 500); // –ó–∞–¥–µ—Ä–∂–∫–∞ 0.5 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –±–æ–Ω—É—Å–Ω–æ–≥–æ —Ä–∞—É–Ω–¥–∞
  } else if (modalText.textContent.includes('–ë–æ–Ω—É—Å–Ω—ã–π —Ä–∞—É–Ω–¥ –∑–∞–≤–µ—Ä—à–µ–Ω')) {
    // –ï—Å–ª–∏ —ç—Ç–æ –æ–∫–Ω–æ "–ë–æ–Ω—É—Å–Ω—ã–π —Ä–∞—É–Ω–¥ –∑–∞–≤–µ—Ä—à–µ–Ω", –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ
    closeModal();
  } else {
    // –û–±—ã—á–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–∫—É–ø–∫–∞ –±–æ–Ω—É—Å–∞)
    if (balance >= bonusCost) {
      balance -= bonusCost;
      isBonusRound = true;
      bonusSpins = 10;
      totalBonusWins = 0.00;
      updateUI();
      closeModal();
      showModal('–ë–æ–Ω—É—Å–Ω—ã–π —Ä–∞—É–Ω–¥ –Ω–∞—á–∞–ª—Å—è!', false, false); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ –Ω–∞—á–∞–ª–∞ –±–æ–Ω—É—Å–Ω–æ–≥–æ —Ä–∞—É–Ω–¥–∞
    } else {
      closeModal(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ, –µ—Å–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤
    }
  }
});

modalCancel.addEventListener('click', closeModal);

// –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏
betSelector.addEventListener('change', (e) => {
  if (isBonusRound) {
    showModal('–ù–µ–ª—å–∑—è –º–µ–Ω—è—Ç—å —Å—Ç–∞–≤–∫—É –≤–æ –≤—Ä–µ–º—è –±–æ–Ω—É—Å–Ω–æ–≥–æ —Ä–∞—É–Ω–¥–∞!');
    e.target.value = currentBet; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
    return;
  }
  currentBet = parseInt(e.target.value);
  bonusCost = currentBet * 100;
  updateUI();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
createGrid();
updateUI();
spinButton.addEventListener('click', spinGrid);
buyBonusButton.addEventListener('click', buyBonus);
